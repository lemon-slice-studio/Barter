buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = "${mod_version}-${mod_phase}"
group = 'cloud.lemonslice.barter'
archivesBaseName = 'Barter'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))

minecraft {
    mappings channel: "${mappings_channel}", version: "${mappings_version}"

//    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            property 'forge.logging.console.level', 'info'

            mods {
                barter {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            property 'forge.logging.console.level', 'info'

            mods {
                barter {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            property 'forge.logging.console.level', 'info'

            args '--mod', 'barter', '--all', '--output', file('src/generated/resources/')

            mods {
                barter {
                    source sourceSets.main
                }
            }
        }
    }
}

def info = [
        "Specification-Title": "Barter",
        "Specification-Vendor": "Lemon Slice Studio",
        "Specification-Version": "1",
        "Implementation-Title": project.name,
        "Implementation-Version": "${version}",
        "Implementation-Vendor" :"Lemon Slice Studio",
        "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
]

repositories {
    maven {
        name = "silveroak"
        url = "http://maven.lemonslice.cloud/releases"
    }
    maven {
        url 'https://www.dogforce-games.com/maven/'
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

    compile fg.deobf("cloud.lemonslice.silveroak:SilveroakOutpost-Forge-1.16.5:0.2.0-Alpha")
}

jar {
    manifest {
        attributes(info)
    }
}

def reobfFile = file("$buildDir/reobfJar/output.jar")
def reobfArtifact = artifacts.add('default', reobfFile) {
    type 'jar'
    builtBy 'reobfJar'
}

publishing {
    publications {
        release(MavenPublication) {
            groupId = "cloud.lemonslice.barter"
            artifactId = "Barter-Forge-${minecraft_version}"

            artifact reobfArtifact
            pom {
                name = 'Barter for Minecraft 1.16.5'
                description = 'Minecraft mod for Barter.'
                url = 'https://github.com/lemon-slice-studio/Barter'
                licenses {
                    license {
                        name = 'BSD-3-Clause'
                        url = 'https://github.com/lemon-slice-studio/Barter/blob/1.16/LICENSE'
                    }
                }
                developers {
                    developer {
                        id = 'RoitoLeo'
                        name = 'RoitoLeo'
                    }
                }
                issueManagement {
                    system = 'GitHub Issues'
                    url = 'https://github.com/lemon-slice-studio/Barter/issues'
                }
                scm {
                    url = 'https://github.com/lemon-slice-studio/Barter'
                    connection = 'scm:git:git://github.com/lemon-slice-studio/Barter.git'
                    developerConnection = 'scm:git:git@github.com:lemon-slice-studio/Barter.git'
                }
            }
        }
    }
    repositories {
        maven {
            name = "archive"
            url = "http://maven.lemonslice.cloud/releases"
            credentials {
                username = System.env.MAVEN_USERNAME
                password = System.env.MAVEN_PASSWORD
            }
        }
    }
}

tasks.withType(PublishToMavenRepository) {
    onlyIf {
        System.env.MAVEN_USERNAME && System.env.MAVEN_PASSWORD
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}